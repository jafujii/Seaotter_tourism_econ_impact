install.packages("patchwork")
install.packages("AICcmodavg")
install.packages("cowplot")
library(tidyverse)
library(patchwork)
library(reshape2)
library(ggpubr)
library(cowplot)
library(here)
library(DCchoice)
library(Ecdat)
library(lmtest)
library(AICcmodavg)
library(scales)
library(ggplot2)
library(ggthemes)
############## Willingness to Pay Analyses ############
datWTP<-read.csv(paste0("C:/Users/",Sys.info()[7],"/Seaotter_tourism_econ_impact/data/WTPsurvey.csv"), header=T)
# Data exploration, average proportion of 'yes' responses for first bid amount
round(tapply(datWTP$ESR1, datWTP$ESBID_1, mean), 2)
round(tapply(datWTP$OTR1, datWTP$OTBID_1, mean), 2)
Sdb3<-dbchoice(OTR1 +OTR2 ~ 1 + log(Income) + Attrib_Otter  | OTBID_1 + OTBID_2,dist="logistic",na.rm=TRUE, data=datS)
## Sea Otter survey
datS<- datWTP %>% dplyr::select(OTR1, OTR2,Income, OTBID_1,OTBID_2, Attrib_Birds,Attrib_Unique,Attrib_Otter,Attrib_Fish, Attrib_Convenience, NVisits,MBA) %>% drop_na()
Sdb3<-dbchoice(OTR1 +OTR2 ~ 1 + log(Income) + Attrib_Otter  | OTBID_1 + OTBID_2,dist="logistic",na.rm=TRUE, data=datS)
datES<- datWTP %>% dplyr::select(ESR1, ESR2,Income, ESBID_1,ESBID_2, Attrib_Birds,Attrib_Unique,Attrib_Otter,
Attrib_Fish, Attrib_Convenience, NVisits,MBA, AGE) %>% drop_na()
Esd3<-dbchoice(ESR1 +ESR2 ~ 1 + log(Income) + Attrib_Otter | ESBID_1 + ESBID_2,dist="logistic", na.rm=TRUE, data=datES)
## Plot both WTP on single graph
## Calculate probabilities with mean otter rank and income, varying bid amount only
tst.data<- data.frame(Attrib_Otter= mean(datS$Attrib_Otter), Income= mean(datS$Income), OTBID_1=c(5:50))
Spred<- predict(Sdb3, newdata= tst.data, se.fit=TRUE, type="probability")
df<-cbind(tst.data,Spred)
df
df$se.fit
$se.fit
df
Spred<- predict(Sdb3, newdata= tst.data,  type="probability")
#se.fit=TRUE,
df<-cbind(tst.data,Spred)
sd
df
Spred
Spred<- predict(Sdb3, newdata= tst.data, se.fit=TRUE, type="probability")
Spred
tst.data<- data.frame(Attrib_Otter= mean(datS$Attrib_Otter), Income= mean(datS$Income), OTBID_1=c(5:50))
Spred<- predict(Sdb3, newdata= tst.data,  type="probability")
df<-cbind(tst.data,Spred)
tst.data1<- data.frame(Income=mean(datES$Income), Attrib_Otter=mean(datES$Attrib_Otter), ESBID_1=c(5:50))
Spred1<- Esd3 %>% predict(tst.data1, type="probability")
df1<-cbind(df,Spred1)
Preds<-melt(df1,id.vars=c("Attrib_Otter", "OTBID_1"))
Pred1<-ggplot(Preds, aes(x=OTBID_1, y= value, color=variable)) +geom_smooth(method="loess", size=2) +scale_x_continuous(name="Proposed Fee Amount (USD)")  +
scale_color_manual(breaks= c("Spred1","Spred"), labels=c("Elkhorn Slough", "Sea Otter"), values= c("#026AA4", "#990000" )) +
scale_y_continuous(limits= c(0,1), name="Probability of voting yes") + theme(legend.justification= c(0.9,0.9), legend.position=c(0.9,0.9)) +themeKV
library(ggthemes)
themeKV <- theme_few() +
theme(strip.background = element_blank(),
axis.line = element_blank(),
axis.title.x= element_text(size= 14,margin = margin(0.2, unit = "cm")),
axis.text.x = element_text(size=12,margin = margin(0.2, unit = "cm")),
axis.title.y= element_text(size= 14,margin = margin(0.2, unit = "cm")),
axis.text.y = element_text(size=12,margin = margin(c(1, 0.2), unit = "cm")),
axis.ticks.length=unit(-0.15, "cm"),element_line(colour = "black", size=.5),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
legend.title=element_blank(),
strip.text=element_text(hjust=0))
tst.data<- data.frame(Attrib_Otter= mean(datS$Attrib_Otter), Income= mean(datS$Income), OTBID_1=c(5:50))
Spred<- predict(Sdb3, newdata= tst.data,  type="probability")
df<-cbind(tst.data,Spred)
tst.data1<- data.frame(Income=mean(datES$Income), Attrib_Otter=mean(datES$Attrib_Otter), ESBID_1=c(5:50))
Spred1<- Esd3 %>% predict(tst.data1, type="probability")
df1<-cbind(df,Spred1)
Preds<-melt(df1,id.vars=c("Attrib_Otter", "OTBID_1"))
Pred1<-ggplot(Preds, aes(x=OTBID_1, y= value, color=variable)) +geom_smooth(method="loess", size=2) +scale_x_continuous(name="Proposed Fee Amount (USD)")  +
scale_color_manual(breaks= c("Spred1","Spred"), labels=c("Elkhorn Slough", "Sea Otter"), values= c("#026AA4", "#990000" )) +
scale_y_continuous(limits= c(0,1), name="Probability of voting yes") + theme(legend.justification= c(0.9,0.9), legend.position=c(0.9,0.9)) +themeKV
Pred1
tdat<- data.frame(Attrib_Otter= c(1:10), Income= mean(datS$Income), OTBID_1= mean(datS$OTBID_1))
Spr<-predict(Sdb3, newdata=tdat, type= "probability")
df<- cbind(tdat, Spr)
tdat1<- data.frame(Attrib_Otter= c(1:10), Income= mean(datES$Income), ESBID_1= mean(datES$ESBID_1))
Spr1<-predict(Esd3, newdata=tdat1, type= "probability")
df1<- cbind(df, Spr1)
ggplot(df, aes(x= Attrib_Otter, y= Spr)) +geom_line() + theme_themeo ()
Preds<-melt(df1,id.vars=c("Attrib_Otter", "Income", "OTBID_1"))
Pred2<-ggplot(Preds, aes(x=Attrib_Otter, y= value, color=variable)) +geom_line(size=1) +scale_x_continuous(name="Ranking score of sea otters") +
scale_color_manual(breaks= c("Spr","Spr1"), labels=c("Elkhorn Slough", "Sea Otter"), values= c("#026AA4", "#990000" )) +
scale_y_continuous(limits= c(0,0.9), name="Probability of voting yes") +
theme_classic()+
theme(strip.background = element_blank(),
axis.line = element_blank(),
text=element_text(size=12),
axis.text.x = element_text(margin = margin( 0.2, unit = "cm")),
axis.text.y = element_text(margin = margin( c(1,0.2), unit = "cm")),
axis.ticks.length=unit(-0.1, "cm"),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
legend.text= element_text(size= 10),
legend.justification= c(0.95,0.95),
legend.position= c(0.95,0.3),
legend.title=element_blank(),
strip.text=element_text(hjust=0) )
Pred2
Pred2<-ggplot(Preds, aes(x=Attrib_Otter, y= value, color=variable)) +geom_line(size=1) +scale_x_continuous(name="Ranking score of sea otters") +
scale_color_manual(breaks= c("Spr","Spr1"), labels=c("Elkhorn Slough", "Sea Otter"), values= c("#026AA4", "#990000" )) +
scale_y_continuous(limits= c(0,0.9), name="Probability of voting yes") + themeKV
Pred2
Pred2<-ggplot(Preds, aes(x=Attrib_Otter, y= value, color=variable)) +geom_line(size=1) +scale_x_continuous(name="Ranking score of sea otters") +
scale_color_manual(breaks= c("Spr","Spr1"), labels=c("Elkhorn Slough", "Sea Otter"), values= c("#026AA4", "#990000" )) +
scale_y_continuous(limits= c(0,0.9), name="Probability of voting yes") + themeKV +
theme(legend.text= element_text(size= 10),legend.justification= c(0.95,0.95),legend.position= c(0.95,0.3),
legend.title=element_blank(), strip.text=element_text(hjust=0))
Pred2
Pred2<-ggplot(Preds, aes(x=Attrib_Otter, y= value, color=variable)) +geom_line(size=3) +scale_x_continuous(name="Ranking score of sea otters") +
scale_color_manual(breaks= c("Spr","Spr1"), labels=c("Elkhorn Slough", "Sea Otter"), values= c("#026AA4", "#990000" )) +
scale_y_continuous(limits= c(0,0.9), name="Probability of voting yes") + themeKV +
theme(legend.text= element_text(size= 10),legend.justification= c(0.95,0.95),legend.position= c(0.95,0.3),
legend.title=element_blank(), strip.text=element_text(hjust=0))
Pred2
Pred2<-ggplot(Preds, aes(x=Attrib_Otter, y= value, color=variable)) +geom_line(size=0.8) +scale_x_continuous(name="Ranking score of sea otters") +
scale_color_manual(breaks= c("Spr","Spr1"), labels=c("Elkhorn Slough", "Sea Otter"), values= c("#026AA4", "#990000" )) +
scale_y_continuous(limits= c(0,0.9), name="Probability of voting yes") + themeKV +
theme(legend.text= element_text(size= 10),legend.justification= c(0.95,0.95),legend.position= c(0.95,0.3),
legend.title=element_blank(), strip.text=element_text(hjust=0))
Pred2
Pred2<-ggplot(Preds, aes(x=Attrib_Otter, y= value, color=variable)) +geom_line(size=0.9) +scale_x_continuous(name="Ranking score of sea otters") +
scale_color_manual(breaks= c("Spr","Spr1"), labels=c("Elkhorn Slough", "Sea Otter"), values= c("#026AA4", "#990000" )) +
scale_y_continuous(limits= c(0,0.9), name="Probability of voting yes") + themeKV +
theme(legend.text= element_text(size= 10),legend.justification= c(0.95,0.95),legend.position= c(0.95,0.3),
legend.title=element_blank(), strip.text=element_text(hjust=0))
Pred2
Pred2<-ggplot(Preds, aes(x=Attrib_Otter, y= value, color=variable)) +geom_smooth(size=0.9) +scale_x_continuous(name="Ranking score of sea otters") +
scale_color_manual(breaks= c("Spr","Spr1"), labels=c("Elkhorn Slough", "Sea Otter"), values= c("#026AA4", "#990000" )) +
scale_y_continuous(limits= c(0,0.9), name="Probability of voting yes") + themeKV +
theme(legend.text= element_text(size= 10),legend.justification= c(0.95,0.95),legend.position= c(0.95,0.3),
legend.title=element_blank(), strip.text=element_text(hjust=0))
Pred2
Pred2<-ggplot(Preds, aes(x=Attrib_Otter, y= value, color=variable)) +geom_smooth(size=0.9,se=T ) +scale_x_continuous(name="Ranking score of sea otters") +
scale_color_manual(breaks= c("Spr","Spr1"), labels=c("Elkhorn Slough", "Sea Otter"), values= c("#026AA4", "#990000" )) +
scale_y_continuous(limits= c(0,0.9), name="Probability of voting yes") + themeKV +
theme(legend.text= element_text(size= 10),legend.justification= c(0.95,0.95),legend.position= c(0.95,0.3),
legend.title=element_blank(), strip.text=element_text(hjust=0))
Pred2
Pred2<-ggplot(Preds, aes(x=Attrib_Otter, y= value, color=variable)) +geom_line(size=0.95) +scale_x_continuous(name="Ranking score of sea otters") +
scale_color_manual(breaks= c("Spr","Spr1"), labels=c("Elkhorn Slough", "Sea Otter"), values= c("#026AA4", "#990000" )) +
scale_y_continuous(limits= c(0,0.9), name="Probability of voting yes") + themeKV +
theme(legend.text= element_text(size= 10),legend.justification= c(0.95,0.95),legend.position= c(0.95,0.3),
legend.title=element_blank(), strip.text=element_text(hjust=0))
Pred2
df1
tdat<- data.frame(Attrib_Otter= c(1:10), Income= mean(datS$Income), OTBID_1= mean(datS$OTBID_1))
SOpr<-predict(Sdb3, newdata=tdat, type= "probability")
df<- cbind(tdat, SOpr)
tdat1<- data.frame(Attrib_Otter= c(1:10), Income= mean(datES$Income), ESBID_1= mean(datES$ESBID_1))
ESpr1<-predict(Esd3, newdata=tdat1, type= "probability")
df1<- cbind(df, ESpr1)
Pred2<-ggplot(Preds, aes(x=Attrib_Otter, y= value, color=variable)) +geom_line(size=0.95) +scale_x_continuous(name="Ranking score of sea otters") +
scale_color_manual(breaks= c("SOpr","ESpr1"), labels=c("Elkhorn Slough", "Sea Otter"), values= c("#026AA4", "#990000" )) +
scale_y_continuous(limits= c(0,0.9), name="Probability of voting yes") + themeKV +
theme(legend.text= element_text(size= 10),legend.justification= c(0.95,0.95),legend.position= c(0.95,0.3),
legend.title=element_blank(), strip.text=element_text(hjust=0))
Pred2
Preds<-melt(df1,id.vars=c("Attrib_Otter", "Income", "OTBID_1"))
Preds
Preds<-melt(df1,id.vars=c("Attrib_Otter", "Income", "OTBID_1"))
Pred2<-ggplot(Preds, aes(x=Attrib_Otter, y= value, color=variable)) +geom_line(size=0.95) +scale_x_continuous(name="Ranking score of sea otters") +
scale_color_manual(breaks= c("SOpr","ESpr1"), labels=c("Elkhorn Slough", "Sea Otter"), values= c("#026AA4", "#990000" )) +
scale_y_continuous(limits= c(0,0.9), name="Probability of voting yes") + themeKV +
theme(legend.text= element_text(size= 10),legend.justification= c(0.95,0.95),legend.position= c(0.95,0.3),
legend.title=element_blank(), strip.text=element_text(hjust=0))
Pred2
Pred2<-ggplot(Preds, aes(x=Attrib_Otter, y= value, color=variable)) +geom_line(size=0.95) +scale_x_continuous(name="Ranking score of sea otters") +
scale_color_manual(breaks= c("SOpr","ESpr1"), labels=c("Sea Otter", "Elkhorn Slough"), values= c("#026AA4", "#990000" )) +
scale_y_continuous(limits= c(0,0.9), name="Probability of voting yes") + themeKV +
theme(legend.text= element_text(size= 10),legend.justification= c(0.95,0.95),legend.position= c(0.95,0.3),
legend.title=element_blank(), strip.text=element_text(hjust=0))
Pred2
ggsave("Fig5_OtterRank.pdf",Pred2, width=90,height=90, scale =1,dpi=800, units="mm")
ggsave("Fig5_OtterRank.png",Pred2, width=90, height=90,scale =1,dpi=800, units="mm")
library(tidyverse)
library(patchwork)
library(reshape2)
library(ggpubr)
library(cowplot)
library(here)
library(Ecdat)
library(lmtest)
library(scales)
library(ggplot2)
library(ggthemes)
themeKV <- theme_few() +
theme(strip.background = element_blank(),
axis.line = element_blank(),
axis.title.x= element_text(size= 14,margin = margin(0.2, unit = "cm")),
axis.text.x = element_text(size=12,margin = margin(0.2, unit = "cm")),
axis.title.y= element_text(size= 14,margin = margin(0.2, unit = "cm")),
axis.text.y = element_text(size=12,margin = margin(c(1, 0.2), unit = "cm")),
axis.ticks.length=unit(-0.15, "cm"),element_line(colour = "black", size=.5),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
legend.title=element_blank(),
strip.text=element_text(hjust=0))
dem<- read.csv(paste0("C:/Users/",Sys.info()[7],"/Seaotter_tourism_econ_impact/data/SurveyData_edits.csv"), header=T)
str(dem)
typ<- dem %>% filter (!is.na(Visit_mode))
typsum<-typ %>% group_by(Visit_mode) %>% summarise(count=length(Visit_mode))
typsum<-typsum%>% mutate(prop=count/(sum(count)))
typplot<-ggplot(typsum,aes(x=reorder(Visit_mode, prop), y= prop )) + geom_bar(stat="identity", fill="azure4" )+
scale_y_continuous(limits=c(0,0.4), name="Proportion of visitors")+
scale_x_discrete (name= " ",label=c("Undetermined", "Motor boat tour" , "Personal watercraft","Hiking", "Kayak tour")) +
themeKV + coord_flip()
typplot
ggsave("Figure_X_activty.pdf",width= 90,height=90, units="mm", dpi=800, typplot)
themeKV <- theme_few() +
theme(strip.background = element_blank(),
axis.line = element_blank(),
axis.title.x= element_text(size= 12,margin = margin(0.2, unit = "cm")),
axis.text.x = element_text(size=12,margin = margin(0.2, unit = "cm")),
axis.title.y= element_text(size= 12,margin = margin(0.2, unit = "cm")),
axis.text.y = element_text(size=12,margin = margin(c(1, 0.2), unit = "cm")),
axis.ticks.length=unit(-0.15, "cm"),element_line(colour = "black", size=.5),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
legend.title=element_blank(),
strip.text=element_text(hjust=0))
typ<- dem %>% filter (!is.na(Visit_mode))
typsum<-typ %>% group_by(Visit_mode) %>% summarise(count=length(Visit_mode))
typsum<-typsum%>% mutate(prop=count/(sum(count)))
typplot<-ggplot(typsum,aes(x=reorder(Visit_mode, prop), y= prop )) + geom_bar(stat="identity", fill="azure4" )+
scale_y_continuous(limits=c(0,0.4), name="Proportion of visitors")+
scale_x_discrete (name= " ",label=c("Undetermined", "Motor boat tour" , "Personal watercraft","Hiking", "Kayak tour")) +
themeKV + coord_flip()
typplot
ggsave("Figure_X_activty.pdf",width= 90,height=90, units="mm", dpi=800, typplot)
typplot<-ggplot(typsum,aes(x=reorder(Visit_mode, prop), y= prop, fill=Color) )) + geom_bar(stat="identity", fill="azure4" )+
scale_y_continuous(limits=c(0,0.4), name="Proportion of visitors")+
scale_x_discrete (name= " ",label=c("Undetermined", "Motor boat tour" , "Personal watercraft","Hiking", "Kayak tour")) +
themeKV + coord_flip()
typplot<-ggplot(typsum,aes(x=reorder(Visit_mode, prop), y= prop, fill=Color)) + geom_bar(stat="identity", fill="azure4" )+
scale_y_continuous(limits=c(0,0.4), name="Proportion of visitors")+
scale_x_discrete (name= " ",label=c("Undetermined", "Motor boat tour" , "Personal watercraft","Hiking", "Kayak tour")) +
themeKV + coord_flip()
typplot
bus<- read.csv(paste0("C:/Users/",Sys.info()[7],"/Seaotter_tourism_econ_impact/data/ES_businesses.csv"), header=T) ## for PC
dem<- read.csv(paste0("C:/Users/",Sys.info()[7],"/Seaotter_tourism_econ_impact/data/SurveyData_edits.csv"), header=T)
dat2<- read.csv(paste0("C:/Users/",Sys.info()[7],"/Seaotter_tourism_econ_impact/data/AttributeRank.csv"), header=T)
dat2<-gather(dat2,attribute, rank, Attrib_Unique:Attrib_Convenience)
## Fig 4A Attribute Rank overall
dat2<- dat2 %>%  mutate(name=factor(attribute, levels= c( "Attrib_Otter", "Attrib_Unique","Attrib_Convenience",
"Attrib_Wildlife", "Attrib_Birds","Attrib_Fish")))
datA<- dat2 %>% group_by(name) %>% summarize (mean= mean(rank),sd=sd(rank), se=(sd(rank)/sqrt(length(rank)))) %>% arrange(mean)
datA$lo <- datA$mean - datA$sd
datA$hi<- datA$mean + datA$sd
datA<- datA %>%mutate( hi= case_when(hi >= 10 ~ 10,TRUE ~ as.numeric(hi)))
## Attribute Rank by Survey Location- not using
# Shows the effect of Water versus Shore based activities, basically the same as seeing otters versus not seeing otters
dat2$Location_Summary[dat2$Location_Summary==2]<-1  ## Combine North and South harbor locations
dat3<- dat2 %>% group_by(Location_Summary,name) %>% filter(Location_Summary != "9") %>%
summarize (mean= mean(rank), se=(sd(rank)/sqrt(length(rank)))) %>% arrange(mean)
##  Attribute Rank by Viewing of sea otters
dat4<- dat2 %>% group_by(OtterYN, name) %>% filter(OtterYN >= 1) %>%
summarize (mean= mean(rank),sd= sd(rank), se=(sd(rank)/sqrt(length(rank)))) %>% arrange(mean)
labels<- c("1"= "Saw sea otters", "2"= "Did not see sea otters")
####Fig 4B Difference of seeing otters ####
## Shows the difference in rank based on seeing sea otters in a single plot
datdif<-dat4 %>% left_join(dat4, suffix=c("1","2"), by = c("name")) %>% filter(mean1 != mean2) %>% mutate(dif= mean1-mean2, hi= (mean1+ sd1)-(mean2 + sd2), lo= (mean1 - sd1)-(mean2 - sd2)) %>% filter(OtterYN1==1)
pdif<- ggplot(datdif, aes(x=reorder(name, -dif), y=dif, fill=Color))+ geom_bar(stat="identity") + scale_y_continuous(name="Change in Ranking Score") + geom_errorbar(aes(ymin=lo, ymax=hi, width=0.5))+
geom_hline(yintercept= 0) + themeKV + theme(axis.text.y= element_blank(), axis.title.y= element_blank()) +
scale_fill_manual(values =c("#00b159", "azure4" ), guide= "none") + coord_flip()
pdif
datdif<- datdif %>% mutate(Color= ifelse(dif <0,"red","green"))
pdif<- ggplot(datdif, aes(x=reorder(name, -dif), y=dif, fill=Color))+ geom_bar(stat="identity") + scale_y_continuous(name="Change in Ranking Score") + geom_errorbar(aes(ymin=lo, ymax=hi, width=0.5))+
geom_hline(yintercept= 0) + themeKV + theme(axis.text.y= element_blank(), axis.title.y= element_blank()) +
scale_fill_manual(values =c("#00b159", "azure4" ), guide= "none") + coord_flip()
pdif
datdif
datdif
typplot<-ggplot(typsum,aes(x=reorder(Visit_mode, prop), y= prop, fill=Color)) + geom_bar(stat="identity", fill="azure4" )+
scale_y_continuous(limits=c(0,0.4), name="Proportion of visitors")+ scale_fill_manual(values =c("#026AA4", "azure4" ))+
scale_x_discrete (name= " ",label=c("Undetermined", "Motor boat tour" , "Personal watercraft","Hiking", "Kayak tour")) +
themeKV + coord_flip()
typplot
typsum
# Colored by Water vs shore activity
typsum<- typsum %>% mutate(Color= ifelse(Visit_mode =="Hiking","azure4","#026AA4"))
typsum
# Colored by Water vs shore activity
typsum<- typsum %>% mutate(Color= ifelse(Visit_mode =="4","azure4","#026AA4"))
typsum
typplot<-ggplot(typsum,aes(x=reorder(Visit_mode, prop), y= prop, fill=Color)) + geom_bar(stat="identity", fill="azure4" )+
scale_y_continuous(limits=c(0,0.4), name="Proportion of visitors")+ scale_fill_manual(values =c("#026AA4", "azure4" ))+
scale_x_discrete (name= " ",label=c("Undetermined", "Motor boat tour" , "Personal watercraft","Hiking", "Kayak tour")) +
themeKV + coord_flip()
typplot
# Colored by Water vs shore activity
typsum<- typsum %>% mutate(Color= ifelse(Visit_mode =="4"|Visit_mode=="5","azure4","#026AA4"))
typsum
typplot<-ggplot(typsum,aes(x=reorder(Visit_mode, prop), y= prop, fill=Color)) + geom_bar(stat="identity")+
scale_y_continuous(limits=c(0,0.4), name="Proportion of visitors")+ scale_fill_manual(values =c("#026AA4", "azure4" ))+
scale_x_discrete (name= " ",label=c("Undetermined", "Motor boat tour" , "Personal watercraft","Hiking", "Kayak tour")) +
themeKV + coord_flip()
typplot
typplot<-ggplot(typsum,aes(x=reorder(Visit_mode, prop), y= prop, fill=Color)) + geom_bar(stat="identity")+
scale_y_continuous(limits=c(0,0.4), name="Proportion of visitors")+ scale_fill_manual(values =c("#026AA4", "azure4" ))+
scale_x_discrete (name= " ",label=c("Undetermined", "Motor boat tour" , "Personal watercraft","Kayak tour", "Hiking")) +
themeKV + coord_flip()
typplot
typplot<-ggplot(typsum,aes(x=reorder(Visit_mode, prop), y= prop, fill=Color)) + geom_bar(stat="identity")+
scale_y_continuous(limits=c(0,0.4), name="Proportion of visitors")+ scale_fill_manual(values =c("#026AA4", "azure4" ),guide="none")+
scale_x_discrete (name= " ",label=c("Undetermined", "Motor boat tour" , "Personal watercraft","Kayak tour", "Hiking")) +
themeKV + coord_flip()
typplot
ggsave("Figure_X_activty.pdf",width= 90,height=90, units="mm", dpi=800, typplot)
Otrsum<- Otrsum %>% mutate (frac = count/ sum(count), ymax= cumsum(frac), ymin=c(0,head(ymax,n=-1)))
dem<- read.csv(paste0("C:/Users/",Sys.info()[7],"/Seaotter_tourism_econ_impact/data/SurveyData_edits.csv"), header=T)
str(dem)
# See sea otters donut plot
Ottr<- dem %>% filter(!is.na(OtterYN))
Otrsum<-Ottr %>% group_by(OtterYN)%>% summarise(count=length(OtterYN) )
Otrsum<- Otrsum %>% mutate (frac = count/ sum(count), ymax= cumsum(frac), ymin=c(0,head(ymax,n=-1)))
Otrsum
san<- read.csv(paste0("C:/Users/",Sys.info()[7],"/Seaotter_tourism_econ_impact/data/Sankey_Econ.csv"), header=T)
str(san)
links<-san
nodes <- data.frame(
name=c(as.character(links$SourceType),
as.character(links$TargetGroup)) %>% unique()
)
links$IDsource <- match(links$SourceType, nodes$name)-1
links$IDtarget <- match(links$TargetGroup, nodes$name)-1
my_color<-'d3.scaleOrdinal()  .range(["cadetblue","darkturquoise", "steelblue","seagreen","green","palegreen" ])'
# .domain(["Direct", "indirect","induced","labor", "value added", "output"])
p <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name", fontSize=12, nodeWidth=30,
colourScale= my_color)
p
### Sankey Diagram and financial flow
library(networkD3)
links<-san
nodes <- data.frame(
name=c(as.character(links$SourceType),
as.character(links$TargetGroup)) %>% unique()
)
links$IDsource <- match(links$SourceType, nodes$name)-1
links$IDtarget <- match(links$TargetGroup, nodes$name)-1
my_color<-'d3.scaleOrdinal()  .range(["cadetblue","darkturquoise", "steelblue","seagreen","green","palegreen" ])'
# .domain(["Direct", "indirect","induced","labor", "value added", "output"])
p <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name", fontSize=12, nodeWidth=30,
colourScale= my_color)
p
links<-san
nodes <- data.frame(
name=c(as.character(links$SourceType),
as.character(links$TargetGroup)) %>% unique()
)
links$IDsource <- match(links$SourceType, nodes$name)-1
links$IDtarget <- match(links$TargetGroup, nodes$name)-1
my_color<-'d3.scaleOrdinal()  .range(["cadetblue","darkturquoise", "steelblue","seagreen","green","palegreen" ])'
# .domain(["Direct", "indirect","induced","labor", "value added", "output"])
p <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value2", NodeID = "name", fontSize=12, nodeWidth=30,
colourScale= my_color)
p
p <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name", fontSize=12, nodeWidth=30,
)
p
links
p <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "Value", NodeID = "name", fontSize=12, nodeWidth=30,
)
p
san<- read.csv(paste0("C:/Users/",Sys.info()[7],"/Seaotter_tourism_econ_impact/data/Sankey_Econ.csv"), header=T)
str(san)
links<-san
nodes <- data.frame(
name=c(as.character(links$Source),
as.character(links$Target)) %>% unique()
)
links$IDsource <- match(links$Source, nodes$name)-1
links$IDtarget <- match(links$Target, nodes$name)-1
p <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "Value", NodeID = "name", fontSize=12, nodeWidth=30,
)
p
links
p
nodes
# .domain(["Direct", "indirect","induced","labor", "value added", "output"])
#colourScale= my_color
p <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "Value", NodeID = "name", fontSize=12,
)
p
# .domain(["Direct", "indirect","induced","labor", "value added", "output"])
#colourScale= my_color
p <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "Value", NodeID = "name"
)
p
library(networkD3)
san<- read.csv(paste0("C:/Users/",Sys.info()[7],"/Seaotter_tourism_econ_impact/data/Sankey_Econ.csv"), header=T)
str(san)
links<-san
nodes <- data.frame(
name=c(as.character(links$Source),
as.character(links$Target)) %>% unique()
)
links$IDsource <- match(links$Source, nodes$name)-1
links$IDtarget <- match(links$Target, nodes$name)-1
p <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "Value", NodeID = "name"
)
p
san<- read.csv(paste0("C:/Users/",Sys.info()[7],"/Seaotter_tourism_econ_impact/data/Sankey_Econ.csv"), header=T)
str(san)
links<-san
nodes <- data.frame(
name=c(as.character(links$Source),
as.character(links$Target)) %>% unique()
)
links$IDsource <- match(links$Source, nodes$name)-1
links$IDtarget <- match(links$Target, nodes$name)-1
my_color<-'d3.scaleOrdinal()  .range(["cadetblue","darkturquoise", "steelblue","seagreen","green","palegreen" ])'
# .domain(["Direct", "indirect","induced","labor", "value added", "output"])
#colourScale= my_color
p <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "Value", NodeID = "name"
)
p
str(links)
san<- read.csv(paste0("C:/Users/",Sys.info()[7],"/Seaotter_tourism_econ_impact/data/Sankey_Econ.csv"), header=T)
str(san)
links<-san
nodes <- data.frame(
name=c(as.character(links$Source),
as.character(links$Target)) %>% unique()
)
links$IDsource <- match(links$Source, nodes$name)-1
links$IDtarget <- match(links$Target, nodes$name)-1
my_color<-'d3.scaleOrdinal()  .range(["cadetblue","darkturquoise", "steelblue","seagreen","green","palegreen" ])'
# .domain(["Direct", "indirect","induced","labor", "value added", "output"])
#colourScale= my_color
p <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "Value", NodeID = "name"
)
p
my_color<-'d3.scaleOrdinal()  .range(["cadetblue","darkturquoise", "steelblue","seagreen","green","palegreen", ""#69b3a2" ])'
p <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "Value", NodeID = "name", colourScale= my_color
)
p
p
links
my_color<-'d3.scaleOrdinal()  .range(["cadetblue","darkturquoise", "steelblue","seagreen","green","palegreen", ""red" ])'
# .domain(["Direct", "indirect","induced","labor", "value added", "output"])
#
p <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "Value", NodeID = "name", colourScale= my_color
)
p
p <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "Value", NodeID = "name", #colourScale= my_color
)
p
p
saveNetwork(p,"p.html")
library(webshot)
#install phantom:
webshot::install_phantomjs()
# Make a webshot in pdf : high quality but can not choose printed zone
webshot("file:///C:/Users/jfujii/Seaotter_tourism_econ_impact/p.html" , "sankey.pdf", delay = 0.2)
saveNetwork(p,"p.html")
# Make a webshot in pdf : high quality but can not choose printed zone
webshot("file:///C:/Users/jfujii/Seaotter_tourism_econ_impact/p.html" , "sankey.pdf", delay = 0.2)
# Make a webshot in pdf : high quality but can not choose printed zone
webshot("file:///C:/Users/jfujii/Seaotter_tourism_econ_impact/p.html" , "sankey2.pdf", delay = 0.2)
# .domain(["Direct", "indirect","induced","labor", "value added", "output"])
#
p2 <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "Value", NodeID = "name", #colourScale= my_color
)
p2
saveNetwork(p2,"p2.html")
# Make a webshot in pdf : high quality but can not choose printed zone
webshot("file:///C:/Users/jfujii/Seaotter_tourism_econ_impact/script/p2.html" , "sankey2.pdf", delay = 0.2)
p2 <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "Value", NodeID = "name", size =12, nodeWidth = 30,
#colourScale= my_color
)
p2
p2 <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "Value", NodeID = "name", fontsize =12, nodeWidth = 30,
#colourScale= my_color
)
p2
