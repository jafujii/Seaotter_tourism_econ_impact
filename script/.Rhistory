"Southern California", "Northern California","West SF Bay"))) %>% group_by(name) %>% summarise(n= n()) %>%
mutate (prop=n/sum(n)*100) %>% arrange(desc(prop))
hm<- ggplot(home, aes(x=name, y= prop))+ geom_bar(stat="identity")+ theme_themeo ()+
scale_y_continuous(name= "Percent") + scale_x_discrete(name= "", limits= rev(levels(home$name))) +coord_flip()
##Party Size density plot with "rug" to show sample data
# Outliers of Party Size were not included in reported averages by Colgan, so also removed here. Likely data entry errors
dem2<- dem %>% filter(Partysize <30)
Psden<- ggplot(dem2, aes(x= Partysize))+geom_density(aes(y=..scaled..), alpha=0.3, color= "#026AA4",fill= "#026AA4")+
geom_rug(aes(x=Partysize, y=0), sides="b", position="jitter") + scale_y_continuous(limits=c(0,1), name="") +
scale_x_continuous(name= "Party Size") + theme_themeo()
## Combining plots together and exporting
denp<- (ageden + Psden)/(incden + visden)
ggsave("Figure2_density.pdf",width= 183, units="mm", denp)
denp
ageden<-ggplot(dem2, aes(x= AGE))+geom_density(aes(y=..scaled..), alpha=0.3, color= "#026AA4",fill= "#026AA4")+ scale_y_continuous(limits=c(0,1), name="Proportion of respondents")+
geom_rug(aes(x=AGE, y=0), sides="b", position="jitter") + scale_x_continuous(name="Age (years)")+ theme_themeo()
incden<- ggplot(dem, aes(x= Income))+geom_density(aes(y=..scaled..), alpha=0.3, color= "#026AA4",fill= "#026AA4")+
geom_rug(aes(x=Income, y=0), sides="b", position="jitter") + scale_y_continuous(limits=c(0,1), name="Proportion of respondents") +
scale_x_continuous(name= "Log (Annual Income)", trans="log10", labels=scales::label_number()) + theme_themeo()
## Combining plots together and exporting
denp<- (ageden + Psden)/(incden + visden)
denp
windowsFonts()
ggsave("Figure2_density.pdf",width= 183, units="mm", denp)
Psden<- ggplot(dem2, aes(x= Partysize))+geom_density(aes(y=..scaled..), alpha=0.3, color= "#026AA4",fill= "#026AA4")+
geom_rug(aes(x=Partysize, y=0), sides="b", position="jitter") + scale_y_continuous(limits=c(0,1), name="") +
scale_x_continuous(name= "Party Size", breaks=c(0,10,50,100,200)) + theme_themeo()
Psden
Psden<- ggplot(dem2, aes(x= Partysize))+geom_density(aes(y=..scaled..), alpha=0.3, color= "#026AA4",fill= "#026AA4")+
geom_rug(aes(x=Partysize, y=0), sides="b", position="jitter") + scale_y_continuous(limits=c(0,1), name="") +
scale_x_continuous(name= "Party Size") + theme_themeo()
Psden
## Density plot previous visits on Log scale with "rug" to show sample data
visden<-ggplot(dem2, aes(x= NVisits))+geom_density(aes(y=..scaled..), alpha=0.3, color= "#026AA4",fill= "#026AA4")+
geom_rug(aes(x=NVisits, y=0), sides="b", position="jitter") + scale_y_continuous(limits=c(0,1), name="")+
scale_x_continuous(name= "Log (Number previous visits)", trans="log1p", labels=scales::label_number(), breaks=c(0,10,50,100,200)) + theme_themeo()
visden
## Density plot previous visits on Log scale with "rug" to show sample data
visden<-ggplot(dem2, aes(x= NVisits))+geom_density(aes(y=..scaled..), alpha=0.3, color= "#026AA4",fill= "#026AA4")+
geom_rug(aes(x=NVisits, y=0), sides="b", position="jitter") + scale_y_continuous(limits=c(0,1), name="")+
scale_x_continuous(name= "Log (Number previous visits)", trans="log1p", labels=scales::label_number(), breaks=c(0,5, 10,50,100,200)) + theme_themeo()
visden
## Density plot previous visits on Log scale with "rug" to show sample data
visden<-ggplot(dem2, aes(x= NVisits))+geom_density(aes(y=..scaled..), alpha=0.3, color= "#026AA4",fill= "#026AA4")+
geom_rug(aes(x=NVisits, y=0), sides="b", position="jitter") + scale_y_continuous(limits=c(0,1), name="")+
scale_x_continuous(name= "Log (Number previous visits)", trans="log1p", labels=scales::label_number(), breaks=c(0, 10,50,100,200)) + theme_themeo()
visden
incden<- ggplot(dem, aes(x= Income))+geom_density(aes(y=..scaled..), alpha=0.3, color= "#026AA4",fill= "#026AA4")+
geom_rug(aes(x=Income, y=0), sides="b", position="jitter") + scale_y_continuous(limits=c(0,1), name="Proportion of respondents", labels = " ") +
scale_x_continuous(name= "Log (Annual Income)", trans="log10", labels=scales::label_number()) + theme_themeo()
incden
incden<- ggplot(dem, aes(x= Income))+geom_density(aes(y=..scaled..), alpha=0.3, color= "#026AA4",fill= "#026AA4")+
geom_rug(aes(x=Income, y=0), sides="b", position="jitter") + scale_y_continuous(limits=c(0,1), name="Proportion of respondents", labels = "") +
scale_x_continuous(name= "Log (Annual Income)", trans="log10", labels=scales::label_number()) + theme_themeo()
incden
Psden<- ggplot(dem2, aes(x= Partysize))+geom_density(aes(y=..scaled..), alpha=0.3, color= "#026AA4",fill= "#026AA4")+
geom_rug(aes(x=Partysize, y=0), sides="b", position="jitter") + scale_y_continuous(limits=c(0,1), name="") +
scale_x_continuous(name= "Party Size") + theme_themeo(axis.text.y=element_blank())
Psden<- ggplot(dem2, aes(x= Partysize))+geom_density(aes(y=..scaled..), alpha=0.3, color= "#026AA4",fill= "#026AA4")+
geom_rug(aes(x=Partysize, y=0), sides="b", position="jitter") + scale_y_continuous(limits=c(0,1), name="") +
scale_x_continuous(name= "Party Size") + theme_classic()+
theme(strip.background = element_blank(),
axis.line = element_blank(),
axis.text.x = element_text(margin = margin( 0.2, unit = "cm")),
axis.text.y = element_blank(),
axis.ticks.length=unit(-0.1, "cm"),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
legend.title=element_blank(),
legend.position="bottom",
strip.text=element_text(hjust=0) )}
Psden<- ggplot(dem2, aes(x= Partysize))+geom_density(aes(y=..scaled..), alpha=0.3, color= "#026AA4",fill= "#026AA4")+
geom_rug(aes(x=Partysize, y=0), sides="b", position="jitter") + scale_y_continuous(limits=c(0,1), name="") +
scale_x_continuous(name= "Party Size") + theme_classic()+
theme(strip.background = element_blank(),
axis.line = element_blank(),
axis.text.x = element_text(margin = margin( 0.2, unit = "cm")),
axis.text.y = element_blank(),
axis.ticks.length=unit(-0.1, "cm"),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
legend.title=element_blank(),
legend.position="bottom",
strip.text=element_text(hjust=0) )
Psden
visden<-ggplot(dem2, aes(x= NVisits))+geom_density(aes(y=..scaled..), alpha=0.3, color= "#026AA4",fill= "#026AA4")+
geom_rug(aes(x=NVisits, y=0), sides="b", position="jitter") + scale_y_continuous(limits=c(0,1), name="")+
scale_x_continuous(name= "Log (Number previous visits)", trans="log1p", labels=scales::label_number(), breaks=c(0, 10,50,100,200)) +
theme_classic()+
theme(strip.background = element_blank(),
axis.line = element_blank(),
axis.text.x = element_text(margin = margin( 0.2, unit = "cm")),
axis.text.y = element_blank(),
axis.ticks.length=unit(-0.1, "cm"),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
legend.title=element_blank(),
legend.position="bottom",
strip.text=element_text(hjust=0) )
visden
## Combining plots together and exporting
denp<- (ageden + Psden)/(incden + visden)
denp
ageden<-ggplot(dem2, aes(x= AGE))+geom_density(aes(y=..scaled..), alpha=0.3, color= "#026AA4",fill= "#026AA4")+ scale_y_continuous(limits=c(0,1), name="Proportion of respondents")+
geom_rug(aes(x=AGE, y=0), sides="b", position="jitter") + scale_x_continuous(name="Age (years)")+ theme_themeo()
ageden
## Density plot previous visits on Log scale with "rug" to show sample data
visden<-ggplot(dem2, aes(x= NVisits))+geom_density(aes(y=..scaled..), alpha=0.3, color= "#026AA4",fill= "#026AA4")+
geom_rug(aes(x=NVisits, y=0), sides="b", position="jitter") + scale_y_continuous(limits=c(0,1), name="")+
scale_x_continuous(name= "Log (Number previous visits)", trans="log1p", labels=scales::label_number(), breaks=c(0, 10,50,100,200)) +
theme_classic()+
theme(strip.background = element_blank(),
axis.line = element_blank(),
axis.text.x = element_text(margin = margin( 0.2, unit = "cm")),
axis.text.y = element_blank(),
axis.ticks.length=unit(-0.1, "cm"),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
legend.title=element_blank(),
legend.position="bottom",
strip.text=element_text(hjust=0) )
visden
incden<- ggplot(dem, aes(x= Income))+geom_density(aes(y=..scaled..), alpha=0.3, color= "#026AA4",fill= "#026AA4")+
geom_rug(aes(x=Income, y=0), sides="b", position="jitter") + scale_y_continuous(limits=c(0,1), name="Proportion of respondents") +
scale_x_continuous(name= "Log (Annual Income)", trans="log10", labels=scales::label_number()) + theme_themeo()
incden
dem2<- dem %>% filter(Partysize <30)
Psden<- ggplot(dem2, aes(x= Partysize))+geom_density(aes(y=..scaled..), alpha=0.3, color= "#026AA4",fill= "#026AA4")+
geom_rug(aes(x=Partysize, y=0), sides="b", position="jitter") + scale_y_continuous(limits=c(0,1), name="") +
scale_x_continuous(name= "Party Size") + theme_classic()+
theme(strip.background = element_blank(),
axis.line = element_blank(),
axis.text.x = element_text(margin = margin( 0.2, unit = "cm")),
axis.text.y = element_blank(),
axis.ticks.length=unit(-0.1, "cm"),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
legend.title=element_blank(),
legend.position="bottom",
strip.text=element_text(hjust=0) )
Psden
## Combining plots together and exporting
denp<- (ageden + Psden)/(incden + visden)
denp
ggsave("Figure2_density.pdf",width= 183, units="mm", denp)
datWTP<-read.csv(paste0("C:/Users/",Sys.info()[7],"/Seaotter_tourism_econ_impact/data/WTPsurvey.csv"), header=T)
#datWTP<- read.csv("WTPsurvey.csv", header=T)
datES<- datWTP %>% dplyr::select(ESR1, ESR2,Income, ESBID_1,ESBID_2, Attrib_Birds,Attrib_Unique,Attrib_Otter,
Attrib_Fish, Attrib_Convenience, NVisits,MBA, AGE) %>% drop_na()
ESd0<- dbchoice(ESR1 +ESR2 ~ 1 | ESBID_1 + ESBID_2,dist="logistic",na.rm=TRUE, data=datES)  # Null Model
Esd1<-dbchoice(ESR1 +ESR2 ~ 1 + log(Income) | ESBID_1 + ESBID_2,dist="logistic",na.rm=TRUE, data=datES) # Reported model
Esdfull<- dbchoice(ESR1 +ESR2 ~ 1 + log(Income) + log(AGE)+ Attrib_Otter + Attrib_Unique + Attrib_Birds + Attrib_Fish +
Attrib_Convenience +NVisits + MBA| ESBID_1 + ESBID_2,dist="logistic",na.rm=TRUE, data=datES) # All reported factors
Esd2<-dbchoice(ESR1 +ESR2 ~ 1 + log(Income) + Attrib_Otter  +
Attrib_Convenience  | ESBID_1 + ESBID_2,dist="logistic", na.rm=TRUE, data=datES)
Esd3<-dbchoice(ESR1 +ESR2 ~ 1 + log(Income) + Attrib_Otter | ESBID_1 + ESBID_2,dist="logistic", na.rm=TRUE, data=datES)
AIC(ESd0,Esd1,Esdfull, Esd2, Esd3) # Esd3 had lowest AIC
summary(Esd3)
set.seed(123)
bootCI(Esd3, nboot = 1000, CI = 0.95, individual = NULL)
Ep<- plot(Esd3, xlab="Bid Amount (USD)")
abline(h=0.5, col="grey")
segments(x0=29.8, y0=-1, x1=29.8, y1=0.5, col="red")
datS<- datWTP %>% dplyr::select(OTR1, OTR2,Income, OTBID_1,OTBID_2, Attrib_Birds,Attrib_Unique,Attrib_Otter,Attrib_Fish, Attrib_Convenience, NVisits,MBA) %>% drop_na()
Sdb0<- dbchoice(OTR1 +OTR2 ~ 1 | OTBID_1 + OTBID_2,dist="logistic",na.rm=TRUE, data=datS)
Sdb1<-dbchoice(OTR1 +OTR2 ~ 1 + log(Income) | OTBID_1 + OTBID_2,dist="logistic", data=datS)
Sdbfull<- dbchoice(OTR1 +OTR2 ~ 1 + log(Income) + Attrib_Otter + Attrib_Unique + Attrib_Birds + Attrib_Fish +
Attrib_Convenience + NVisits +MBA  | OTBID_1 + OTBID_2,dist="logistic", data=datS)
Sdb2<-dbchoice(OTR1 +OTR2 ~ 1 + log(Income) + Attrib_Otter  +
Attrib_Convenience  | OTBID_1 + OTBID_2,dist="logistic", data=datS)
Sdb3<-dbchoice(OTR1 +OTR2 ~ 1 + log(Income) + Attrib_Otter  | OTBID_1 + OTBID_2,dist="logistic", data=datS)
Sdb4<-dbchoice(OTR1 +OTR2 ~ 1 + Attrib_Otter  | OTBID_1 + OTBID_2,dist="logistic", data=datS)
AIC(Sdb0, Sdb1, Sdbfull, Sdb2, Sdb3, Sdb4)
summary(Sdb3)
summary(Sdb4)
set.seed(123)
bootCI(Sdb4, nboot = 1000, CI = 0.95, individual = NULL)
tst.data<- data.frame(Attrib_Otter=mean(datS$Attrib_Otter), OTBID_1=c(5:50))
Spred<-Sdb4 %>% predict(tst.data, type="probability")
df<-cbind(tst.data,Spred)
tst.data1<- data.frame(Income=mean(datES$Income), Attrib_Otter=mean(datES$Attrib_Otter), ESBID_1=c(5:50))
Spred1<- Esd3 %>% predict(tst.data1, type="probability",)
df1<-cbind(df,Spred1)
Preds<-melt(df1,id.vars=c("Attrib_Otter", "OTBID_1"))
Pred1<-ggplot(Preds, aes(x=OTBID_1, y= value, color=variable)) +geom_smooth(method="loess", size=2) +scale_x_continuous(name="Bid Amount") +theme_themeo() +
scale_color_discrete(breaks= c("Spred1","Spred"), labels=c("Elkhorn Slough", "Sea Otter")) +
scale_y_continuous(name="Probability of voting yes")
Pred1
tst.data<- data.frame(Attrib_Otter=mean(datS$Attrib_Otter), OTBID_2=c(5:50))
Spred<-Sdb4 %>% predict(tst.data, type="probability")
df<-cbind(tst.data,Spred)
tst.data1<- data.frame(Income=mean(datES$Income), Attrib_Otter=mean(datES$Attrib_Otter), ESBID_2=c(5:50))
Spred1<- Esd3 %>% predict(tst.data1, type="probability",)
df1<-cbind(df,Spred1)
Preds<-melt(df1,id.vars=c("Attrib_Otter", "OTBID_2"))
Pred1<-ggplot(Preds, aes(x=OTBID_1, y= value, color=variable)) +geom_smooth(method="loess", size=2) +scale_x_continuous(name="Bid Amount") +theme_themeo() +
scale_color_discrete(breaks= c("Spred1","Spred"), labels=c("Elkhorn Slough", "Sea Otter")) +
scale_y_continuous(name="Probability of voting yes")
Pred1
Pred1<-ggplot(Preds, aes(x=OTBID_2, y= value, color=variable)) +geom_smooth(method="loess", size=2) +scale_x_continuous(name="Bid Amount") +theme_themeo() +
scale_color_discrete(breaks= c("Spred1","Spred"), labels=c("Elkhorn Slough", "Sea Otter")) +
scale_y_continuous(name="Probability of voting yes")
Pred1
Pred1<-ggplot(Preds, aes(x=OTBID_2, y= value, color=variable)) +geom_smooth(method="loess") +scale_x_continuous(name="Bid Amount") +theme_themeo() +
scale_color_discrete(breaks= c("Spred1","Spred"), labels=c("Elkhorn Slough", "Sea Otter")) +
scale_y_continuous(name="Probability of voting yes")
Pred1
Pred1<-ggplot(Preds, aes(x=OTBID_2, y= value, color=variable)) +geom_smooth(method="loess", size=2) +scale_x_continuous(name="Proposed Fee Amount (USD)") +theme_themeo() +
scale_color_discrete(breaks= c("Spred1","Spred"), labels=c("Elkhorn Slough", "Sea Otter")) +
scale_y_continuous(name="Probability of voting yes")
Pred1
Pred1<-ggplot(Preds, aes(x=OTBID_2, y= value, color=variable)) +geom_smooth(method="loess", size=2) +scale_x_continuous(name="Proposed Fee Amount (USD)") +theme_themeo() +
scale_color_discrete(breaks= c("Spred1","Spred"), labels=c("Elkhorn Slough", "Sea Otter"), values= c("#026AA4", "#990000" )) +
scale_y_continuous(name="Probability of voting yes")
Pred1<-ggplot(Preds, aes(x=OTBID_2, y= value, color=variable)) +geom_smooth(method="loess", size=2) +scale_x_continuous(name="Proposed Fee Amount (USD)") +theme_themeo() +
scale_color_manual(breaks= c("Spred1","Spred"), labels=c("Elkhorn Slough", "Sea Otter"), values= c("#026AA4", "#990000" )) +
scale_y_continuous(name="Probability of voting yes")
Pred1
Pred1<-ggplot(Preds, aes(x=OTBID_2, y= value, color=variable)) +geom_smooth(method="loess", size=2) +scale_x_continuous(name="Proposed Fee Amount (USD)") +theme_themeo() +
scale_color_manual(breaks= c("Spred1","Spred"), labels=c("Elkhorn Slough", "Sea Otter"), values= c("#026AA4", "#990000" )) +
scale_y_continuous(limits= c(0,1), name="Probability of voting yes")
Pred1
Pred1<-ggplot(Preds, aes(x=OTBID_2, y= value, color=variable)) +geom_smooth(method="loess", se= TRUE, size=2) +scale_x_continuous(name="Proposed Fee Amount (USD)") +theme_themeo() +
scale_color_manual(breaks= c("Spred1","Spred"), labels=c("Elkhorn Slough", "Sea Otter"), values= c("#026AA4", "#990000" )) +
scale_y_continuous(limits= c(0,1), name="Probability of voting yes")
Pred1
Pred1<-ggplot(Preds, aes(x=OTBID_2, y= value, color=variable)) +geom_smooth(method="loess", size=2) +scale_x_continuous(name="Proposed Fee Amount (USD)") +theme_themeo() +
scale_color_manual(breaks= c("Spred1","Spred"), labels=c("Elkhorn Slough", "Sea Otter"), values= c("#026AA4", "#990000" )) +
scale_y_continuous(limits= c(0,1), name="Probability of voting yes") + theme( legend.position = "right")
PPred1
Pred1
Pred1<-ggplot(Preds, aes(x=OTBID_2, y= value, color=variable)) +geom_smooth(method="loess", size=2) +scale_x_continuous(name="Proposed Fee Amount (USD)") +theme_themeo() +
scale_color_manual(breaks= c("Spred1","Spred"), labels=c("Elkhorn Slough", "Sea Otter"), values= c("#026AA4", "#990000" )) +
scale_y_continuous(limits= c(0,1), name="Probability of voting yes") + theme( legend.justification= c(1,0.75), legend.position=c(1,0.75))
Pred1
Pred1<-ggplot(Preds, aes(x=OTBID_2, y= value, color=variable)) +geom_smooth(method="loess", size=2) +scale_x_continuous(name="Proposed Fee Amount (USD)") +theme_themeo() +
scale_color_manual(breaks= c("Spred1","Spred"), labels=c("Elkhorn Slough", "Sea Otter"), values= c("#026AA4", "#990000" )) +
scale_y_continuous(limits= c(0,1), name="Probability of voting yes") + theme( legend.justification= c(1,0.9), legend.position=c(1,0.9))
Pred1
Pred1<-ggplot(Preds, aes(x=OTBID_2, y= value, color=variable)) +geom_smooth(method="loess", size=2, show.legend = FALSE) +scale_x_continuous(name="Proposed Fee Amount (USD)") +theme_themeo() +
scale_color_manual(breaks= c("Spred1","Spred"), labels=c("Elkhorn Slough", "Sea Otter"), values= c("#026AA4", "#990000" )) +
scale_y_continuous(limits= c(0,1), name="Probability of voting yes") + theme( legend.justification= c(1,0.9), legend.position=c(1,0.9))
Pred1
Pred1<-ggplot(Preds, aes(x=OTBID_2, y= value, color=variable)) +geom_smooth(method="loess", size=2) +scale_x_continuous(name="Proposed Fee Amount (USD)") +theme_themeo() +
scale_color_manual(breaks= c("Spred1","Spred"), labels=c("Elkhorn Slough", "Sea Otter"), values= c("#026AA4", "#990000" )) +
scale_y_continuous(limits= c(0,1), name="Probability of voting yes") + theme( legend.justification= c(1,0.9), legend.position=c(1,0.9))
Pred1
library(tidyverse)
library(patchwork)
library(reshape2)
library(ggpubr)
library(cowplot)
library(here)
library(DCchoice)
library(Ecdat)
library(lmtest)
library(AICcmodavg)
library(Incens)
library(BiocManager)
install.packages("DCchoice")
library(tidyverse)
library(patchwork)
library(reshape2)
library(ggpubr)
library(cowplot)
library(here)
library(DCchoice)
library(Ecdat)
library(lmtest)
library(AICcmodavg)
library(BiocManager)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("Icens")
dat2<- read.csv(paste0("C:/Users/",Sys.info()[7],"/Seaotter_tourism_econ_impact/data/AttributeRank.csv"), header=T)
#dat2<-read.csv("AttributeRank.csv", header=T)
dat2<-gather(dat2,attribute, rank, Attrib_Unique:Attrib_Convenience)
library(tidyverse)
library(patchwork)
library(reshape2)
library(ggpubr)
library(cowplot)
library(Ecdat)
library(lmtest)
library(AICcmodavg)
dat2<- read.csv(paste0("C:/Users/",Sys.info()[7],"/Seaotter_tourism_econ_impact/data/AttributeRank.csv"), header=T)
#dat2<-read.csv("AttributeRank.csv", header=T)
dat2<-gather(dat2,attribute, rank, Attrib_Unique:Attrib_Convenience)
dat2
dat2<- read.csv(paste0("C:/Users/",Sys.info()[7],"/Seaotter_tourism_econ_impact/data/AttributeRank.csv"), header=T)
#dat2<-read.csv("AttributeRank.csv", header=T)
dat3<-gather(dat2,attribute, rank, Attrib_Unique:Attrib_Convenience)
str(dat3)
tbl<-table(dat3$attribute, dat3$rank)
tbl
chisq.test(tbl)
dem<- read.csv(paste0("C:/Users/",Sys.info()[7],"/Seaotter_tourism_econ_impact/data/SurveyData_edits.csv"), header=T)
str(dem)
summary(dem$NVisits)
length(dem$NVisits)
length(dem$Income)
summary(dem$Income)
library(tidyverse)
library(patchwork)
library(reshape2)
library(ggpubr)
library(cowplot)
library(here)
library(DCchoice)
library(Ecdat)
library(lmtest)
library(AICcmodavg)
datWTP<-read.csv(paste0("C:/Users/",Sys.info()[7],"/Seaotter_tourism_econ_impact/data/WTPsurvey.csv"), header=T)
datES<- datWTP %>% dplyr::select(ESR1, ESR2,Income, ESBID_1,ESBID_2, Attrib_Birds,Attrib_Unique,Attrib_Otter,
Attrib_Fish, Attrib_Convenience, NVisits,MBA, AGE) %>% drop_na()
ESd0<- dbchoice(ESR1 +ESR2 ~ 1 | ESBID_1 + ESBID_2,dist="logistic",na.rm=TRUE, data=datES)  # Null Model
Esdfull<- dbchoice(ESR1 +ESR2 ~ 1 + log(Income) + log(AGE)+ Attrib_Otter + Attrib_Unique +
Attrib_Convenience +NVisits + MBA| ESBID_1 + ESBID_2,dist="logistic",na.rm=TRUE, data=datES) # All reported factors
Esd1<-dbchoice(ESR1 +ESR2 ~ 1 + log(Income) | ESBID_1 + ESBID_2,dist="logistic",na.rm=TRUE, data=datES) # Reported model
Esd2<-dbchoice(ESR1 +ESR2 ~ 1 + log(Income) + Attrib_Otter  +
Attrib_Convenience  | ESBID_1 + ESBID_2,dist="logistic", na.rm=TRUE, data=datES)
Esd3<-dbchoice(ESR1 +ESR2 ~ 1 + log(Income) + Attrib_Otter | ESBID_1 + ESBID_2,dist="logistic", na.rm=TRUE, data=datES)
AIC(ESd0,Esd1,Esdfull, Esd2, Esd3) # Esd3 had lowest AIC
datS<- datWTP %>% dplyr::select(OTR1, OTR2,Income, OTBID_1,OTBID_2, Attrib_Birds,Attrib_Unique,Attrib_Otter,Attrib_Fish, Attrib_Convenience, NVisits,MBA) %>% drop_na()
Sdb0<- dbchoice(OTR1 +OTR2 ~ 1 | OTBID_1 + OTBID_2,dist="logistic",na.rm=TRUE, data=datS)
Sdbfull<- dbchoice(OTR1 +OTR2 ~ 1 + log(Income) + Attrib_Otter + Attrib_Unique + Attrib_Birds + Attrib_Fish +
Attrib_Convenience + NVisits +MBA  | OTBID_1 + OTBID_2,dist="logistic", data=datS)
Sdb1<-dbchoice(OTR1 +OTR2 ~ 1 + log(Income) | OTBID_1 + OTBID_2,dist="logistic", data=datS)
Sdb2<-dbchoice(OTR1 +OTR2 ~ 1 + log(Income) + Attrib_Otter  +
Attrib_Convenience  | OTBID_1 + OTBID_2,dist="logistic", data=datS)
Sdb3<-dbchoice(OTR1 +OTR2 ~ 1 + log(Income) + Attrib_Otter  | OTBID_1 + OTBID_2,dist="logistic",na.rm=TRUE, data=datS)
Sdb4<-dbchoice(OTR1 +OTR2 ~ 1 + Attrib_Otter  | OTBID_1 + OTBID_2,dist="logistic", data=datS)
AIC(Sdb0, Sdb1, Sdbfull, Sdb2, Sdb3, Sdb4)
tst.data<- data.frame(Attrib_Otter= mean(datS$Attrib_Otter), Income= mean(datS$Income), OTBID_1=c(5:50))
Spred<- predict(Sdb3, newdata= tst.data, type="probability")
df<-cbind(tst.data,Spred)
tst.data1<- data.frame(Income=mean(datES$Income), Attrib_Otter=mean(datES$Attrib_Otter), ESBID_1=c(5:50))
Spred1<- Esd3 %>% predict(tst.data1, type="probability")
df1<-cbind(df,Spred1)
Preds<-melt(df1,id.vars=c("Attrib_Otter", "OTBID_1"))
Pred1<-ggplot(Preds, aes(x=OTBID_1, y= value, color=variable)) +geom_smooth(method="loess", size=2) +scale_x_continuous(name="Proposed Fee Amount (USD)") +theme_themeo() +
scale_color_manual(breaks= c("Spred1","Spred"), labels=c("Elkhorn Slough", "Sea Otter"), values= c("#026AA4", "#990000" )) +
scale_y_continuous(limits= c(0,1), name="Probability of voting yes") + theme( legend.justification= c(0.9,0.9), legend.position=c(0.9,0.9))
theme_themeo <- function () {
theme_classic()+
theme(strip.background = element_blank(),
axis.line = element_blank(),
axis.text.x = element_text(margin = margin( 0.2, unit = "cm")),
axis.text.y = element_text(margin = margin(c(1, 0.2), unit = "cm")),
axis.ticks.length=unit(-0.1, "cm"),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
legend.title=element_blank(),
legend.position="bottom",
strip.text=element_text(hjust=0) )}
Pred1<-ggplot(Preds, aes(x=OTBID_1, y= value, color=variable)) +geom_smooth(method="loess", size=2) +scale_x_continuous(name="Proposed Fee Amount (USD)") +theme_themeo() +
scale_color_manual(breaks= c("Spred1","Spred"), labels=c("Elkhorn Slough", "Sea Otter"), values= c("#026AA4", "#990000" )) +
scale_y_continuous(limits= c(0,1), name="Probability of voting yes") + theme( legend.justification= c(0.9,0.9), legend.position=c(0.9,0.9))
Pred1<-ggplot(Preds, aes(x=OTBID_1, y= value, color=variable)) +geom_smooth(method="loess", size=2) +scale_x_continuous(name="Proposed Fee Amount (USD)") +theme_themeo() +
scale_color_manual(breaks= c("Spred1","Spred"), labels=c("Elkhorn Slough", "Sea Otter"), values= c("#026AA4", "#990000" )) +
scale_y_continuous(limits= c(0,1), name="Probability of voting yes") + theme( legend.justification= c(0.9,0.9), legend.position=c(0.9,0.9))
Pred1
ggsave("Fig4_WTP.pdf",Pred1, width=183, scale =1,units="mm")
library(tidyverse)
library(patchwork)
library(reshape2)
library(DCchoice)
library(Ecdat)
library(lmtest)
library(AICcmodavg)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("Icens")
library(tidyverse)
library(patchwork)
library(reshape2)
library(DCchoice)
library(Ecdat)
library(lmtest)
library(AICcmodavg)
library(Icens)
dat<- read.csv("WTPsurvey.csv", header=T)
str(dat)
table(dat$ESR1, dat$ESBID_1)
## Survey Data
datWTP<-read.csv(paste0("C:/Users/",Sys.info()[7],"/Seaotter_tourism_econ_impact/data/WTPsurvey.csv"), header=T)
str(dat)
str(datWTP)
table(daWTP$ESR1, datWTP$ESBID_1)
table(datWTP$ESR1, datWTP$ESBID_1)
round(tapply(dat$ESR1, dat$ESBID_1, mean), 2)
round(tapply(datWTP$ESR1, datWTP$ESBID_1, mean), 2)
round(tapply(datWTP$OTR1, datWTP$OTBID_1, mean), 2)
dat1<- datWTP %>% dplyr::select(ESR1, ESR2,Income, ESBID_1,ESBID_2, Attrib_Birds,Attrib_Unique,Attrib_Otter,Attrib_Fish, Attrib_Convenience, NVisits,MBA) %>% drop_na()
# Test of error distributions used in full model
E.log<-  dbchoice(ESR1 +ESR2 ~ 1 + log(Income) +log(Age)+ Attrib_Otter + Attrib_Unique +
Attrib_Convenience +NVisits + MBA| ESBID_1 + ESBID_2,dist="logistic",na.rm=TRUE, data=dat1)
dat1<- datWTP %>% dplyr::select(ESR1, ESR2,Income,Age, ESBID_1,ESBID_2, Attrib_Birds,Attrib_Unique,Attrib_Otter,Attrib_Fish, Attrib_Convenience, NVisits,MBA) %>% drop_na()
str(datWTP)
dat1<- datWTP %>% dplyr::select(ESR1, ESR2,Income,AGE, ESBID_1,ESBID_2, Attrib_Birds,Attrib_Unique,Attrib_Otter,Attrib_Fish, Attrib_Convenience, NVisits,MBA) %>% drop_na()
# Test of error distributions used in full model
E.log<-  dbchoice(ESR1 +ESR2 ~ 1 + log(Income) +log(AGE)+ Attrib_Otter + Attrib_Unique +
Attrib_Convenience +NVisits + MBA| ESBID_1 + ESBID_2,dist="logistic",na.rm=TRUE, data=dat1)
E.loglog<-dbchoice(ESR1 +ESR2 ~ 1 + log(Income) +log(AGE)+ Attrib_Otter + Attrib_Unique +
Attrib_Convenience +NVisits + MBA| log(ESBID_1) + log(ESBID_2),dist="log-logistic",na.rm=TRUE, data=dat1)
E.lognormal<-dbchoice(ESR1 +ESR2 ~ 1 + log(Income) +log(AGE)+ Attrib_Otter + Attrib_Unique +
Attrib_Convenience +NVisits + MBA| log(ESBID_1) + log(ESBID_2),dist="log-normal",na.rm=TRUE, data=dat1)
AIC(E.log, E.loglog,E.lognormal)
## Model testing from null, full, and selective factors
ESd0<- dbchoice(ESR1 +ESR2 ~ 1 | ESBID_1 + ESBID_2,dist="logistic",na.rm=TRUE, data=dat1)
Esdfull<- dbchoice(ESR1 +ESR2 ~ 1 + log(Income) + log(Age)+ Attrib_Otter + Attrib_Unique + Attrib_Birds + Attrib_Fish +
Attrib_Convenience +NVisits + MBA| ESBID_1 + ESBID_2,dist="logistic",na.rm=TRUE, data=dat1)
Esdfull<- dbchoice(ESR1 +ESR2 ~ 1 + log(Income) + log(AGE)+ Attrib_Otter + Attrib_Unique + Attrib_Birds + Attrib_Fish +
Attrib_Convenience +NVisits + MBA| ESBID_1 + ESBID_2,dist="logistic",na.rm=TRUE, data=dat1)
summary(Esdfull)
Esd1<-dbchoice(ESR1 +ESR2 ~ 1 + log(Income) | ESBID_1 + ESBID_2,dist="logistic",na.rm=TRUE, data=dat1)
Esd2<-dbchoice(ESR1 +ESR2 ~ 1 + log(Income) + Attrib_Otter  +
Attrib_Convenience  | ESBID_1 + ESBID_2,dist="logistic", na.rm=TRUE, data=dat1)
Esd3<-dbchoice(ESR1 +ESR2 ~ 1 + log(Income) + Attrib_Otter | ESBID_1 + ESBID_2,dist="logistic", na.rm=TRUE, data=dat1)
AIC(ESd0,Esd1,Esdfull, Esd2, Esd3)
#
set.seed(123)
bootCI(Esd3, nboot = 1000, CI = 0.95, individual = NULL)
## Sea Otter survey
dat2<- dat %>% dplyr::select(OTR1, OTR2,Income, AGE, OTBID_1,OTBID_2, Attrib_Birds,Attrib_Unique,Attrib_Otter,Attrib_Fish, Attrib_Convenience, NVisits,MBA) %>% drop_na()
## Sea Otter survey
dat2<- datWTP %>% dplyr::select(OTR1, OTR2,Income, AGE, OTBID_1,OTBID_2, Attrib_Birds,Attrib_Unique,Attrib_Otter,Attrib_Fish, Attrib_Convenience, NVisits,MBA) %>% drop_na()
Sdb0<- dbchoice(OTR1 +OTR2 ~ 1 | OTBID_1 + OTBID_2,dist="logistic",na.rm=TRUE, data=dat2)
Sdbfull<- dbchoice(OTR1 +OTR2 ~ 1 + log(Income) + log(AGE) +Attrib_Otter + Attrib_Unique + Attrib_Birds + Attrib_Fish +
Attrib_Convenience + NVisits +MBA  | OTBID_1 + OTBID_2,dist="logistic", data=dat2)
Sdb1<-dbchoice(OTR1 +OTR2 ~ 1 + log(Income) | OTBID_1 + OTBID_2,dist="logistic", data=dat2)
Sdb2<-dbchoice(OTR1 +OTR2 ~ 1 + log(Income) + Attrib_Otter  +
Attrib_Convenience  | OTBID_1 + OTBID_2,dist="logistic", data=dat2)
Sdb3<-dbchoice(OTR1 +OTR2 ~ 1 + log(Income) + Attrib_Otter  | OTBID_1 + OTBID_2,dist="logistic", data=dat2)
AIC(Sdb0,Sdbfull, Sdb1, Sdb2, Sdb3)
Sdb4<-dbchoice(OTR1 +OTR2 ~ 1 + Attrib_Otter  | OTBID_1 + OTBID_2,dist="logistic", data=dat2)
summary(Sdb4)
summary(Sdb2)
set.seed(123)
bootCI(Sdb2, nboot = 1000, CI = 0.95, individual = NULL)
tst.data<- data.frame(Income=mean(dat2$Income), Attrib_Otter=mean(dat2$Attrib_Otter), OTBID_1=c(5:50))
Spred<-Sdb3 %>% predict(tst.data, type="probability")
df<-cbind(tst.data,Spred)
tst.data1<- data.frame(Income=mean(dat1$Income), Attrib_Otter=mean(dat1$Attrib_Otter), ESBID_1=c(5:50))
Spred1<- Esd3 %>% predict(tst.data1, type="probability")
df1<-cbind(df,Spred1)
Preds<-melt(df1,id.vars=c("Income", "Attrib_Otter", "OTBID_1"))
Pred1<-ggplot(Preds, aes(x=OTBID_1, y= value, color=variable)) +geom_smooth(method="loess", size=2) +scale_x_continuous(name="Bid Amount") +theme_themeo() +
scale_color_discrete(breaks= c("Spred1","Spred"), labels=c("Elkhorn Slough", "Sea Otter")) +
scale_y_continuous(name="Probability of voting yes") +
annotate (geom="point", x=28, y=0.50, color="black", size=3)+
annotate(geom="point", x=30.7, y= 0.5, color="black", size=3)
theme_themeo <- function () {
theme_classic()+
theme(strip.background = element_blank(),
axis.line = element_blank(),
axis.text.x = element_text(margin = margin( 0.2, unit = "cm")),
axis.text.y = element_text(margin = margin(c(1, 0.2), unit = "cm")),
axis.ticks.length=unit(-0.1, "cm"),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
legend.title=element_blank(),
legend.position="bottom",
strip.text=element_text(hjust=0) )}
Pred1<-ggplot(Preds, aes(x=OTBID_1, y= value, color=variable)) +geom_smooth(method="loess", size=2) +scale_x_continuous(name="Bid Amount") +theme_themeo() +
scale_color_discrete(breaks= c("Spred1","Spred"), labels=c("Elkhorn Slough", "Sea Otter")) +
scale_y_continuous(name="Probability of voting yes") +
annotate (geom="point", x=28, y=0.50, color="black", size=3)+
annotate(geom="point", x=30.7, y= 0.5, color="black", size=3)
Pred1
tst.data<- data.frame(Attrib_Otter= mean(datS$Attrib_Otter), Income= mean(datS$Income), OTBID_1=c(5:50))
Spred<- predict(Sdb3, newdata= tst.data, type="probability")
df<-cbind(tst.data,Spred)
tst.data1<- data.frame(Income=mean(datES$Income), Attrib_Otter=mean(datES$Attrib_Otter), ESBID_1=c(5:50))
Spred1<- Esd3 %>% predict(tst.data1, type="probability")
df1<-cbind(df,Spred1)
Preds<-melt(df1,id.vars=c("Attrib_Otter", "OTBID_1"))
Pred1<-ggplot(Preds, aes(x=OTBID_1, y= value, color=variable)) +geom_smooth(method="loess", size=2) +scale_x_continuous(name="Proposed Fee Amount (USD)") +theme_themeo() +
scale_color_manual(breaks= c("Spred1","Spred"), labels=c("Elkhorn Slough", "Sea Otter"), values= c("#026AA4", "#990000" )) +
scale_y_continuous(limits= c(0,1), name="Probability of voting yes") + theme( legend.justification= c(0.9,0.9), legend.position=c(0.9,0.9))
ggsave("
)
)
Pred1
## Bar Plot of raw data
datplot<- datWTP %>% dplyr::select ( OTR2, OTBID_2) %>% drop_na() %>% group_by(OTBID_2) %>%summarize(mn1=mean(OTR2))
datplot
library(tidyverse)
library(patchwork)
library(reshape2)
library(ggpubr)
library(cowplot)
library(here)
library(DCchoice)
library(Ecdat)
library(lmtest)
library(AICcmodavg)
theme_themeo <- function () {
theme_classic()+
theme(strip.background = element_blank(),
axis.line = element_blank(),
axis.text.x = element_text(margin = margin( 0.2, unit = "cm")),
axis.text.y = element_text(margin = margin(c(1, 0.2), unit = "cm")),
axis.ticks.length=unit(-0.1, "cm"),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
legend.title=element_blank(),
legend.position="bottom",
strip.text=element_text(hjust=0) )}
dem<- read.csv(paste0("C:/Users/",Sys.info()[7],"/Seaotter_tourism_econ_impact/data/SurveyData_edits.csv"), header=T)
str(dem)
####################### Summary and plotting of attributes rank scores ########################
dat2<- read.csv(paste0("C:/Users/",Sys.info()[7],"/Seaotter_tourism_econ_impact/data/AttributeRank.csv"), header=T)
#dat2<-read.csv("AttributeRank.csv", header=T)
dat2<-gather(dat2,attribute, rank, Attrib_Unique:Attrib_Convenience)
tbl<-table(dat3$attribute, dat3$rank) # Count of ranking scores by attribute
tbl<-table(dat2$attribute, dat3$rank) # Count of ranking scores by attribute
tbl<-table(dat2$attribute, dat2$rank) # Count of ranking scores by attribute
tbl
chisq.test(tbl) # Chi-Square test
